import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class Ex3 {
	public static void main(String[] args) {
		// 코로나 api 주소를 요청한다.
		final String API_KEY = "본인의 API 입력";
		// 예제에서 반드시 입력할 url parameter 로 검색 기간을 정할 수 있음.
		final String startDate = "20200201";
		final String endDate = "20200401";
		// 나머지 page 정보나 한번에 보여줄 정보는 고정해서 사용하고, 필요시 변경 가능.
		String url = String.format("http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson"
				+ "?serviceKey=%s&pageNo=l&numOfRows=10&startCreateDt=%s&endCreateDt=%s", API_KEY, startDate, endDate);

		// HttpModule 에 작성한함수로 xml 데이터를얻어오기.
		// 여기서 얻어지는 Document 클래스는 import 시 org.w3c.dom.Document 여야함.
		// Document 는 많이 사용되는 클래스 명이라 이상한걸 import 하는 실수가 있을 수 있으니, 그럴 경우 위에서 수동으로 제거후 다시 추가 필요.
		Document res = HttpModule.requestXmlGet(url);

		// 얻어온 결과에서 ppt 내에 xml 포맷이 있으니 어떤 key 값에 대한 item 을 가져올지 설정이 필요.
		// 여기서는 item 키 값을 가져오면 결과 값들을 받을 수 있으니, 간단히 item key 값에 해당하는 것들을 받아오는 것으로 함.
		// 여기서 Node는 org.w3c.dom.NodeList

		// 현재 코로나 데이터에 보면 item 내에 키 중에 사용할 키 값 리스트를 받는다.
		// clearCnt, createDt, deathCnt, decideCnt, examCnt, seq

		// 각 키 값에 대한 리스트를 받아온다.
		// 각 키 값에 대한 값은 해당 API 문서에 어떤 값인지 적혀 있으니 참조.


		//순서 (seq)
		NodeList seqs = res.getElementsByTagName("seq"); 
		//시간 (createDt)
		NodeList createDts = res.getElementsByTagName("createDt"); 
		//검사수 (examCnt)
		NodeList examCnts = res.getElementsByTagName("examCnt");
		//환진자 수 (decideCnt)
		NodeList decideCnts = res.getElementsByTagName("decideCnt"); 
		//사망자 수 (deathCnt)
		NodeList deathCnts = res.getElementsByTagName("deathCnt"); 

		System.out.println("순서	시간				검사수	확진자 수	사망자 수");
		for(int i=seqs.getLength()-1; i>=0; i--) {
			// 여기서 Node 는 org.w3c.dom.Node
			Node seq = seqs.item(i); //순서
			Node createDt = createDts.item(i); //시간
			Node examCnt = examCnts.item(i); //검사수
			Node decideCnt = decideCnts.item(i); //확진자
			Node deathCnt = deathCnts.item(i); //사망자

			// 각 list 에 해당하는 각 아이템의 첫번째 값들을 출력한다.
			System.out.print(seq.getFirstChild().getNodeValue()+"	");
			System.out.print(createDt.getFirstChild().getNodeValue()+"		");
			System.out.print(examCnt.getFirstChild().getNodeValue()+"	");
			System.out.print(decideCnt.getFirstChild().getNodeValue()+"	");
			System.out.println(deathCnt.getFirstChild().getNodeValue());
			
			/*
			순서	시간				검사수	확진자 수	사망자 수
			5	2020-02-04 23:56:31.000		129	18	0
			6	2020-02-05 20:05:40.000		40	19	0
			7	2020-02-06 09:09:49.000		169	23	0
			8	2020-02-07 09:53:27.000		264	24	0
			9	2020-02-07 17:20:45.000		327	24	0
			10	2020-02-08 10:09:34.000		620	24	0
			13	2020-02-08 17:01:12.000		939	24	0
			15	2020-02-09 09:58:22.000		960	25	0
			16	2020-02-09 16:59:21.000		888	27	0
			17	2020-02-10 09:56:41.000		809	27	0
			18	2020-02-10 17:03:49.000		531	27	0
			19	2020-02-11 09:50:10.000		865	28	0
			20	2020-02-11 17:09:25.000		762	28	0
			21	2020-02-12 10:05:49.000		992	28	0
			22	2020-02-12 16:56:47.000		785	28	0
			23	2020-02-13 09:50:45.000		670	28	0
			24	2020-02-13 17:09:07.000		562	28	0
			25	2020-02-14 09:50:49.000		692	28	0
			26	2020-02-14 17:16:19.000		535	28	0
			27	2020-02-15 10:00:11.000		638	28	0
			28	2020-02-15 17:00:21.000		558	28	0
			29	2020-02-16 10:04:04.000		577	29	0
			30	2020-02-16 16:57:02.000		485	29	0
			31	2020-02-17 09:53:13.000		408	30	0
			32	2020-02-17 16:50:47.000		708	30	0
			33	2020-02-18 10:04:38.000		957	31	0
			34	2020-02-18 10:05:31.000		957	31	0
			35	2020-02-18 16:42:00.000		818	31	0
			36	2020-02-19 09:53:08.000		1030	46	0
			37	2020-02-19 17:00:13.000		1149	51	0
			38	2020-02-20 10:01:31.000		1633	82	0
			39	2020-02-20 17:12:33.000		1860	104	1
			40	2020-02-21 09:58:51.000		2707	156	1
			41	2020-02-21 17:12:33.000		3180	204	1
			43	2020-02-22 09:59:46.000		5481	346	2
			44	2020-02-22 17:00:28.000		6037	433	2
			45	2020-02-23 10:22:25.000		6039	556	4
			46	2020-02-23 17:05:12.000		8057	602	5
			47	2020-02-24 10:17:36.000		8725	763	7
			48	2020-02-24 17:03:50.000		11631	833	7
			49	2020-02-25 10:00:40.000		13273	893	8
			50	2020-02-25 17:02:03.000		13880	977	10
			51	2020-02-26 10:02:05.000		16734	1146	11
			52	2020-02-26 17:00:43.000		20716	1261	12
			53	2020-02-27 10:19:35.000		21097	1595	12
			54	2020-02-27 17:32:06.000		25568	1766	13
			55	2020-02-28 10:32:34.000		24751	2022	13
			56	2020-02-28 17:01:59.000		30237	2337	13
			57	2020-02-29 10:14:50.000		29154	2931	16
			58	2020-02-29 17:16:20.000		35182	3150	17
			59	2020-03-01 10:06:32.000		32422	3526	17
			60	2020-03-01 17:41:45.000		33360	3736	18
			61	2020-03-02 10:52:38.000		33799	4212	22
			62	2020-03-03 10:46:53.000		35555	4812	28
			63	2020-03-04 10:21:44.000		28414	5328	32
			64	2020-03-05 10:15:12.000		21810	5766	35
			65	2020-03-06 12:55:44.000		21832	6284	42
			66	2020-03-07 11:00:45.000		19620	6767	44
			67	2020-03-08 11:16:27.000		19376	7134	50
			68	2020-03-09 10:47:15.000		17458	7382	51
			69	2020-03-10 10:20:27.000		18452	7513	54
			70	2020-03-11 10:17:19.000		18540	7755	60
			71	2020-03-12 10:37:03.000		17727	7869	66
			72	2020-03-13 10:07:22.000		17940	7979	67
			73	2020-03-14 10:29:11.000		17634	8086	72
			74	2020-03-15 10:01:22.000		16272	8162	75
			75	2020-03-16 10:12:33.000		14971	8236	75
			76	2020-03-17 10:29:38.000		17291	8320	81
			77	2020-03-18 10:26:15.000		16346	8413	84
			78	2020-03-19 10:07:57.000		15904	8565	91
			79	2020-03-20 10:15:58.718		15525	8652	94
			80	2020-03-21 10:02:57.520		15704	8799	102
			81	2020-03-22 10:07:27.574		14540	8897	104
			82	2020-03-23 10:27:32.239		13628	8961	111
			84	2020-03-24 10:20:57.026		15440	9037	120
			85	2020-03-25 10:12:04.210		14278	9137	126
			86	2020-03-26 10:40:49.828		14369	9241	131
			87	2020-03-27 10:17:01.343		15219	9332	139
			88	2020-03-28 10:30:06.001		16564	9478	144
			89	2020-03-29 10:10:19.538		15028	9583	152
			90	2020-03-30 10:32:34.049		13531	9661	158
			91	2020-03-31 11:00:44.357		16892	9786	162
			92	2020-04-01 10:13:21.570		16585	9887	165
			*/
		}
	}
}